<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc
      http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <tx:annotation-driven/>
    <context:component-scan base-package="com.assanai"/>
    <mvc:default-servlet-handler/>
    <!-- PropertyPlaceholder Config-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:applicationResources.properties</value>
        </property>
    </bean>

    <!--================================================================================-->
    <!-- Embedded Datasource -->
    <!--================================================================================-->

    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:sql/schema.sql"/>
        <jdbc:script location="classpath:sql/test-data.sql"/>
    </jdbc:embedded-database>

    <!--================================================================================-->
    <!-- Basic Datasource -->
    <!--================================================================================-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${database.driverClassName}" />
        <property name="url" value="${database.url}" />
        <property name="username" value="${database.username}" />
        <property name="password" value="${database.password}" />
    </bean>-->

    <!--================================================================================-->
    <!-- Profiles -->
    <!--================================================================================-->
    <!--<beans profile="dev">


    </beans>


    <beans profile="prod">

    </beans>-->

    <!--================================================================================-->
    <!-- Transactional -->
    <!--================================================================================-->
    <!--<bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>-->

    <!-- Creating TransactionManager Bean, since JDBC we are creating of type
        DataSourceTransactionManager -->


    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:packagesToScan="com.assanai.spring.mvc.domain"
          p:hibernateProperties-ref="hibernateProperties"/>

    <util:properties id="hibernateProperties">
        <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
        <prop key="hibernate.max_fetch_depth">3</prop>
        <prop key="hibernate.jdbc.fetch_size">50</prop>
        <prop key="hibernate.jdbc.batch_size">10</prop>
        <prop key="hibernate.show_sql">true</prop>
        <!-- Hibernate 4.1.6 introduce a property enable_lazy_load_no_trans -->
        <!--<prop key="hibernate.enable_lazy_load_no_trans">true</prop>-->
    </util:properties>


    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.assanai.spring.mvc.domain"/>
        <property name="jpaProperties">
            <props>
                <!--<prop key="hibernate.hbm2ddl.auto">none</prop>-->
                <!--<prop key="hibernate.ejb.naming_strategy">com.amanurat.CustomHibernateNamingStrategy</prop>-->
            </props>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="database" value="MYSQL"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
    </bean>

    <bean id="jPaTransactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"/>


    <!--================================================================================-->
    <!-- Jdbc Template -->
    <!--================================================================================-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource">
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

</beans>